[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

# Optional packaging metadata (not required for HA to load a custom component)
[project]
name = "tuya-valve"
version = "0.1.0"
description = "Custom Home Assistant integration for a Tuya-controlled water valve"
readme = "README.md"
requires-python = ">=3.11"

[tool.setuptools]
packages = ["custom_components.tuya_valve"]

# -------------------------
# Ruff: HA-like lint config
# -------------------------
[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
# Broad selection similar to HA Core (imports, logging, pylint bridge, etc.)
select = [
  "A", "ASYNC", "B", "BLE", "C", "COM", "D", "DTZ", "E", "F", "FLY", "FURB",
  "G", "I", "ICN", "INP", "ISC", "LOG", "N", "PERF", "PGH", "PIE", "PL", "PT",
  "PTH", "RET", "RSE", "RUF", "SIM", "SLOT", "SLF", "S", "TC", "TID", "TRY",
  "UP", "W"
]

# Ignores aligned with HA Core style (not exhaustive, but the important ones):
ignore = [
  # --- Docstring style HA relaxes ---
  "D202", "D203", "D213", "D406", "D407", "E501",
  # Keep D102 and D107 enforced (HA wants method/__init__ docstrings)
  # Ignore module/class/function docstrings for small custom components:
  "D100", "D101", "D103", "D419",

  # A few HA-typical relaxations
  "PLC1901", "PLR0911", "PLR0912", "PLR0913", "PLR0915", "PLR2004",
  "PLW1641", "PLW2901",
  "PT011", "PT018",
  "RUF001", "RUF002", "RUF003",
  "RUF015", "SIM102", "SIM103", "SIM108", "SIM115",
  "TC001", "TC002", "TC003", "TC006",
  "TRY003", "TRY400",
  "UP038", "UP046", "UP047", "UP049",
  # Formatter conflicts
  "W191", "E111", "E114", "E117", "D206", "D300", "Q", "COM812", "COM819",
]

# Keep HA's docstring flavor
[tool.ruff.lint.pydocstyle]
convention = "google"

# Import conventions (subset of HAâ€™s; enough for a custom component)
[tool.ruff.lint.flake8-import-conventions.extend-aliases]
voluptuous = "vol"
"homeassistant.helpers.config_validation" = "cv"
"homeassistant.util.dt" = "dt_util"
"homeassistant.util.uuid" = "uuid_util"

# Ban APIs HA discourages
[tool.ruff.lint.flake8-tidy-imports.banned-api]
"async_timeout".msg = "Use asyncio.timeout instead"
"pytz".msg = "Use zoneinfo instead"

# isort-like behavior via Ruff
[tool.ruff.lint.isort]
force-sort-within-sections = true
combine-as-imports = true
split-on-trailing-comma = false
known-first-party = ["custom_components.tuya_valve"]

# Allow relative imports inside your integration (like HA does inside components)
[tool.ruff.lint.per-file-ignores]
"custom_components/**" = ["TID252"]  # allow relative imports in packages
